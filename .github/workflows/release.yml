name: Publish Release

on:
  push:
    branches:
      - release
    paths:
      - 'CHANGELOG.md'

jobs:
  changelog:
    name: Generate Tag (but not changelog)
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      skipped: ${{ steps.changelog.outputs.skipped }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PRIVATE_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - run: |
          npm install conventional-changelog-conventionalcommits@7.0.2
          npm install conventional-recommended-bump@9.0.0

      - name: Set up version.json
        run: echo "{"version":$(git describe --tags --abbrev=0)}" > version.json

      - name: Generate version tag (no changelog)
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5.2.1
        with:
          github-token: ${{ secrets.PRIVATE_TOKEN }}
          git-user-name: 'WynntilsBot'
          git-user-email: 'admin@wynntils.com'
          pre-commit: ./.github/.pre-commit.js
          config-file-path: ./.github/.config.js
          version-file: ./version.json
          skip-version-file: true
          skip-git-pull: true
          skip-commit: true
          skip-tag: false
          pre-release: false
          release-count: 0

      - name: Upload version information
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.gradle

  build:
    name: Build
    needs: [changelog]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Gradle data
        uses: actions/cache@v4
        with:
          path: .gradle
          key: ${{ runner.os }}-gradle--${{ hashFiles('**/settings.gradle', '**/gradle.properties') }}

      - uses: actions/download-artifact@v4
        with:
          name: build

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
          cache: "gradle"

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew buildDependents -x spotlessCheck -x test

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            **/build/libs/*-fabric+MC-*.jar
            **/build/libs/*-neoforge+MC-*.jar
          if-no-files-found: error
          overwrite: true

  release-github:
    name: Release to GitHub
    if: ${{ needs.changelog.outputs.skipped != 'true' }}
    runs-on: ubuntu-latest
    needs: [build, changelog]
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PRIVATE_TOKEN }}
          ref: release

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Read CHANGELOG.md
        id: changelogfile
        run: |
          body=$(cat CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          body: ${{ steps.changelogfile.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            **/build/libs/*-fabric+MC-*.jar
            **/build/libs/*-neoforge+MC-*.jar
